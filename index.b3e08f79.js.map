{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCEA,I,EAAM,EAAgB,SAAS,aAAa,CAAC,MAGvC,EAuBG,AAPA,A,C,A,C,S,C,E,G,M,O,C,G,O,E,E,C,E,EAjBuB,EAAc,QAAQ,G,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,EAiBxC,QAAQ,CAClB,SAAC,CAAA,CAAO,CADV,EAEI,OAAA,EAAU,EAAM,OAAO,CAAC,MAAM,EAAI,EAAU,EAAM,OAAO,CAAC,MAAM,C,GAKxD,GAAG,CAAC,SAAC,CAAjB,EAA+B,MAAA,CAC7B,KAAM,EAAS,WAAW,CAC1B,SAAU,EAAS,OAAO,CAAC,QAAQ,CACnC,OAAQ,EAAS,OAAO,CAAC,MAAM,CAC/B,IAAK,EAAS,OAAO,CAAC,GAAG,AAC3B,C,GAGF,SAAS,EAAU,CAAY,EAC7B,OAAO,EAAa,UAAU,CAAC,IAAK,IAAI,UAAU,CAAC,IAAK,GAC1D,CA/BA,EAAc,SAAS,CAAG,EACvB,GAAG,CACF,SAFJ,CAAA,EAEO,IAAA,EAAA,EAAA,QAAA,CAAU,EAAA,EAAA,MAAA,CAAQ,EAAA,EAAA,GAAA,CAAW,EAAA,EAAN,IAAvB,CAAgD,MAAC,uCAGjC,MAAA,CADE,EAAS,4BAEd,MAAA,CADG,EAAO,yBAGpB,MAAA,CAFU,EAAI,wBAED,MAAA,CAAb,EAAa,gBAGpB,GAAA,IAAI,CAAC","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar employeesList = document.querySelector(\"ul\");\nvar sortedList = sortList(_to_consumable_array(employeesList.children));\nvar employees = getEmployees(sortedList);\nemployeesList.innerHTML = employees.map(function(param) {\n    var position = param.position, salary = param.salary, age = param.age, employeeName = param.name;\n    return '\\n      <li\\n        data-position=\"'.concat(position, '\"\\n        data-salary=\"').concat(salary, '\"\\n        data-age=\"').concat(age, '\"\\n      >\\n        ').concat(employeeName, \"\\n      </li>\");\n}).join(\"\");\nfunction sortList(list) {\n    return list.toSorted(function(item1, item2) {\n        return getNumber(item2.dataset.salary) - getNumber(item1.dataset.salary);\n    });\n}\nfunction getEmployees(list) {\n    return list.map(function(employee) {\n        return {\n            name: employee.textContent,\n            position: employee.dataset.position,\n            salary: employee.dataset.salary,\n            age: employee.dataset.age\n        };\n    });\n}\nfunction getNumber(stringNumber) {\n    return stringNumber.replaceAll(\"$\", \"\").replaceAll(\",\", \"\");\n}\n\n//# sourceMappingURL=index.b3e08f79.js.map\n","'use strict';\n\nconst employeesList = document.querySelector('ul');\n\nconst sortedList = sortList([...employeesList.children]);\nconst employees = getEmployees(sortedList);\n\nemployeesList.innerHTML = employees\n  .map(\n    ({ position, salary, age, name: employeeName }) => `\n      <li\n        data-position=\"${position}\"\n        data-salary=\"${salary}\"\n        data-age=\"${age}\"\n      >\n        ${employeeName}\n      </li>`,\n  )\n  .join('');\n\nfunction sortList(list) {\n  return list.toSorted(\n    (item1, item2) =>\n      getNumber(item2.dataset.salary) - getNumber(item1.dataset.salary),\n  );\n}\n\nfunction getEmployees(list) {\n  return list.map((employee) => ({\n    name: employee.textContent,\n    position: employee.dataset.position,\n    salary: employee.dataset.salary,\n    age: employee.dataset.age,\n  }));\n}\n\nfunction getNumber(stringNumber) {\n  return stringNumber.replaceAll('$', '').replaceAll(',', '');\n}\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","employeesList","document","querySelector","employees","list","_array_without_holes","isArray","children","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","toSorted","item1","item2","getNumber","dataset","salary","map","employee","textContent","position","age","stringNumber","replaceAll","innerHTML","param","employeeName","concat","join"],"version":3,"file":"index.b3e08f79.js.map"}